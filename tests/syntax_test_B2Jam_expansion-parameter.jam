#  SYNTAX TEST "Packages/B2Jam/B2Jam.sublime-syntax"

# Copyright 2023 Andrew McCann
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE or http://www.boost.org/LICENSE_1_0.txt)


# special argument references
    $(0) $(1) $(2) $(3) $(4) $(5)  
#     ^                             variable.other.readwrite.b2jam
#          ^                        constant.language.b2jam - variable.other.readwrite.b2jam
#               ^                   constant.language.b2jam - variable.other.readwrite.b2jam
#                    ^              constant.language.b2jam - variable.other.readwrite.b2jam
#                         ^         constant.language.b2jam - variable.other.readwrite.b2jam
#                              ^    constant.language.b2jam - variable.other.readwrite.b2jam
    $(6) $(7) $(8) $(9) $(10)
#     ^                             constant.language.b2jam - variable.other.readwrite.b2jam
#          ^                        constant.language.b2jam - variable.other.readwrite.b2jam
#               ^                   constant.language.b2jam - variable.other.readwrite.b2jam
#                    ^              constant.language.b2jam - variable.other.readwrite.b2jam
#                         ^^        constant.language.b2jam - variable.other.readwrite.b2jam
    $(11) $(12) $(13) $(14) $(15)
#     ^^                            constant.language.b2jam - variable.other.readwrite.b2jam
#           ^^                      constant.language.b2jam - variable.other.readwrite.b2jam
#                 ^^                constant.language.b2jam - variable.other.readwrite.b2jam
#                       ^^          constant.language.b2jam - variable.other.readwrite.b2jam
#                             ^^    constant.language.b2jam - variable.other.readwrite.b2jam
    $(16) $(17) $(18) $(19) $(20)
#     ^^                            constant.language.b2jam - variable.other.readwrite.b2jam
#           ^^                      constant.language.b2jam - variable.other.readwrite.b2jam
#                 ^^                constant.language.b2jam - variable.other.readwrite.b2jam
#                       ^^          constant.language.b2jam - variable.other.readwrite.b2jam
#                             ^^    variable.other.readwrite.b2jam
    $(<)    $(>)    ;
#     ^                             constant.language.b2jam
#             ^                     constant.language.b2jam


# in quotes too
   "$(1) $(<)"
#     ^                             constant.language.b2jam
#          ^                        constant.language.b2jam

# various quote permutations
   $("<")  $("<)"  $(<")" ;
#     ^                             constant.language.b2jam
#             ^                     constant.language.b2jam
#                    ^              constant.language.b2jam

   $("1")  $("1)"  $(1")" ;
#     ^                             constant.language.b2jam
#             ^                     constant.language.b2jam
#                    ^              constant.language.b2jam

   $("2")  $("2)"  $(2")" ;
#     ^                             constant.language.b2jam
#             ^                     constant.language.b2jam
#                    ^              constant.language.b2jam

   $("2")  $("2)"  $(2")" ;
#     ^                             constant.language.b2jam
#             ^                     constant.language.b2jam
#                    ^              constant.language.b2jam

   $("12")  $(1"2)"  $(1"2)" ;
#     ^^                            constant.language.b2jam
#             ^                     constant.language.b2jam
#               ^                   constant.language.b2jam
#                      ^            constant.language.b2jam
#                        ^          constant.language.b2jam

# <- - meta.block.b2jam 



# balanced parenthesis in variable body
     $((())) ;
#    ^^^^^^^         meta.function-call.identifier.b2jam meta.interpolation.parameter
#     ^              punctuation.section.interpolation.begin.b2jam
#          ^         punctuation.section.interpolation.end.b2jam
#      ^^^^          source.b2jam - punctuation.section.interpolation


# balanced paren-quote
     $(("s")) ;
#    ^^^^^^^^        meta.function-call.identifier.b2jam meta.interpolation.parameter


# mixed ( and "
     $((")") ;
#    ^^^^^^^         meta.function-call.identifier.b2jam meta.interpolation.parameter
#      ^^^^          variable.other.readwrite.b2jam 
#       ^^^          meta.string.b2jam
#      ^             - string
#       ^            punctuation.definition.string.begin.b2jam
#         ^          punctuation.definition.string.end.b2jam

     $("()") ;
#    ^^^^^^^         meta.function-call.identifier.b2jam meta.interpolation.parameter
#      ^^^^          variable.other.readwrite.b2jam
#      ^^^^          meta.string.b2jam
#      ^             punctuation.definition.string.begin.b2jam
#         ^          punctuation.definition.string.end.b2jam
# mixed " and (
     $("(")) ;
#    ^^^^^^^         meta.function-call.identifier.b2jam meta.interpolation.parameter
#      ^^^^          variable.other.readwrite.b2jam
#      ^^^           meta.string.b2jam
#         ^          - meta.string.b2jam 


# mixed " and (
     $("(")"()") ;
#    ^^^^^^^^^^^        meta.function-call.identifier.b2jam meta.interpolation.parameter
#      ^^^^^^^^         variable.other.readwrite.b2jam
#      ^^^              meta.string.b2jam
#         ^             - meta.string.b2jam
#          ^^^^         meta.string.b2jam
#      ^                punctuation.definition.string.begin.b2jam
#        ^              punctuation.definition.string.end.b2jam
#          ^            punctuation.definition.string.begin.b2jam
#             ^         punctuation.definition.string.end.b2jam

     $(name:) ;         
#    ^^^^^^^^           meta.function-call.identifier.b2jam meta.interpolation.parameter 
#    ^^^^^^^^           - invalid
#          ^            keyword.operator.expansion.b2jam
#           ^           punctuation.section.interpolation.end.b2jam


# QN : fail
    $(X(("PQ)QX:)" ;
#   ^^^^^^^^^^^^^   meta.interpolation.parameter
#     ^             - invalid.illegal.b2jam 
#      ^            invalid.illegal.b2jam    
#       ^^^^^^^     - invalid.illegal.b2jam 
#     ^^^^^^^^^     variable.other.readwrite.b2jam
#     ^^^           - meta.string.b2jam
#        ^^^^^^^^^  meta.string.b2jam
#        ^          punctuation.definition.string.begin.b2jam
#                ^  punctuation.definition.string.end.b2jam
#              ^    keyword.operator.expansion.b2jam - variable.other.readwrite.b2jam
#               ^   punctuation.section.interpolation.end.b2jam

# LN : fail
    $(sf(str:)  ;  
#     ^^^^^^        meta.interpolation.parameter variable.other.readwrite.b2jam
#     ^^            - invalid.illegal.b2jam
#       ^           invalid.illegal.b2jam    
#        ^^^        - invalid.illegal.b2jam
#     ^^^^^^        - meta.string.b2jam - string.quoted.double.b2jam
#           ^       keyword.operator.expansion.b2jam - variable.other.readwrite.b2jam
#            ^      punctuation.section.interpolation.end.b2jam

    $("f(sh:)" ;     
#   ^^^^^^^^^       meta.interpolation.parameter
#     ^^^^^         variable.other.readwrite.b2jam
#   ^^^^            - invalid.illegal.b2jam 
#       ^           invalid.illegal.b2jam    
#        ^^^^       - invalid.illegal.b2jam 
#     ^^^^^^^^      meta.string.b2jam
#          ^        keyword.operator.expansion.b2jam - variable.other.readwrite.b2jam
#           ^       punctuation.section.interpolation.end.b2jam

    $(X"f(sh):)" ;     
#   ^^^^^^^^^^^     meta.interpolation.parameter
#     ^             variable.other.readwrite.b2jam
#   ^^^^^^^^^^^^    - invalid.illegal.b2jam    
#      ^^^^^^^^^    meta.string.b2jam
#            ^      keyword.operator.expansion.b2jam - variable.other.readwrite.b2jam
#             ^     punctuation.section.interpolation.end.b2jam

    $(X"f("sh:) ;     
#   ^^^^^^^^^^^     meta.interpolation.parameter
#     ^^^^^^^       variable.other.readwrite.b2jam
#     ^^^           - invalid.illegal.b2jam 
#        ^          invalid.illegal.b2jam    
#         ^^^^      - invalid.illegal.b2jam 
#      ^^^^         meta.string.b2jam
#      ^            punctuation.definition.string.begin.b2jam
#         ^         punctuation.definition.string.end.b2jam
#            ^      keyword.operator.expansion.b2jam - variable.other.readwrite.b2jam
#             ^     punctuation.section.interpolation.end.b2jam

# Test that failure is to the most recent nest-branch, not first
    $(X("F("))(:) ;
#   ^^^^^^^^^^^^^   meta.interpolation.parameter    
#     ^^^^^^^^^     variable.other.readwrite.b2jam
#     ^^            - meta.string.b2jam 
#       ^^^^        meta.string.b2jam
#           ^^^     - meta.string.b2jam 
#             ^     invalid.illegal.b2jam
#     ^^^^^^^^      - invalid.illegal.b2jam 
#       ^           punctuation.definition.string.begin.b2jam
#          ^        punctuation.definition.string.end.b2jam
#              ^    keyword.operator.expansion.b2jam - variable.other.readwrite.b2jam
#               ^   punctuation.section.interpolation.end.b2jam

# Quoted: Test that failure is to the most recent nest-branch, not first
    $(X"Q(F())(:)" ;
#   ^^^^^^^^^^^^^   meta.interpolation.parameter    
#     ^^^^^^^^^     variable.other.readwrite.b2jam
#     ^             - meta.string.b2jam
#      ^^^^^^^^^^^  meta.string.b2jam
#   ^^^^^^^^^^      - invalid.illegal.b2jam 

# interpolation identifier cannot escape special chars :[()
     $(a\) ;         
#   ^^^^^^^^^^^      source.b2jam
#    ^^^^^           meta.function-call.identifier.b2jam meta.interpolation.parameter 
#       ^            constant.character.escape.impotent.b2jam invalid.deprecated.impotent.escape.b2jam
#        ^           punctuation.section.interpolation.end.b2jam - invalid

     $(a\:) ;
#   ^^^^^^^^^^^      source.b2jam
#       ^            constant.character.escape.impotent.b2jam invalid.deprecated.impotent.escape.b2jam
#        ^           - invalid
     
     $(a\[]) ;
#   ^^^^^^^^^^^      source.b2jam
#       ^            constant.character.escape.impotent.b2jam invalid.deprecated.impotent.escape.b2jam
#        ^           - invalid
#        ^           punctuation.section.item-access.begin.b2jam
#         ^          punctuation.section.item-access.end.b2jam
     $(a\()) ;
#   ^^^^^^^^^^^      source.b2jam
#       ^            constant.character.escape.impotent.b2jam invalid.deprecated.impotent.escape.b2jam
#        ^           - invalid

# unbalanced parentheis - extraneous
  $(var)) ;          
# ^^^^^^             meta.function-call.identifier.b2jam meta.interpolation.parameter 
#      ^             punctuation.section.interpolation.end.b2jam
#       ^            meta.function-call.identifier.b2jam variable.function.b2jam
#         ^          punctuation.terminator.b2jam

  $(var(asdf:)) ;    
# ^^^^^^^^^^^^^     meta.function-call.identifier.b2jam
# ^^^^^^^^^^^^      meta.interpolation.parameter
#      ^            invalid.illegal.b2jam
#           ^       keyword.operator.expansion.b2jam
#            ^      punctuation.section.interpolation.end.b2jam
#             ^     variable.function.b2jam
#               ^   punctuation.terminator.b2jam

  $(var(asdf[])) ;    
# ^^^^^^^^^^^^^          meta.function-call.identifier.b2jam meta.interpolation.parameter
#   ^^^                  - invalid
#      ^                invalid.illegal.b2jam
#       ^^^^^^           - invalid
#           ^^           meta.item-access.b2jam 
#          ^             - meta.item-access.b2jam 
#             ^          - meta.item-access.b2jam 
#           ^            punctuation.section.item-access.begin.b2jam
#            ^           punctuation.section.item-access.end.b2jam
#             ^          punctuation.section.interpolation.end.b2jam
#              ^         variable.function.b2jam
#                ^       punctuation.terminator.b2jam

# nested () in id failure
  $(var(as()f:)) ;       
# ^^^^^^^^^^^^^          meta.function-call.identifier.b2jam meta.interpolation.parameter
#   ^^^                  - invalid
#      ^                invalid.illegal.b2jam
#       ^^^^^^           - invalid
#            ^           keyword.operator.expansion.b2jam
#             ^          punctuation.section.interpolation.end.b2jam
#              ^         variable.function.b2jam
#                ^       punctuation.terminator.b2jam



# unbalanced parenthesis - runaway
  $(var(( \))  ;  \) ;
# ^^^^^^^^^^^^^^^^^^     meta.function-call.identifier.b2jam meta.interpolation.parameter 
#   ^^^^^                variable.other.readwrite.b2jam
#          ^^            variable.other.readwrite.b2jam
#              ^         variable.other.readwrite.b2jam
#         ^              constant.character.escape.impotent.b2jam invalid.deprecated.impotent.escape.b2jam
#                 ^      constant.character.escape.impotent.b2jam invalid.deprecated.impotent.escape.b2jam
#        ^               invalid.deprecated.b2jam
#            ^^          invalid.deprecated.b2jam
#               ^^       invalid.deprecated.b2jam
#                    ^   punctuation.terminator.b2jam



# simple array index 
   $(var[1]) ;
#  ^^^^^^^^^     meta.function-call.identifier.b2jam meta.interpolation.parameter
#  ^^^^^^^^^^^   - invalid
#  ^             punctuation.definition.variable.b2jam
#   ^            punctuation.section.interpolation.begin.b2jam
#    ^^^         variable.other.readwrite.b2jam
#       ^^^      meta.item-access.b2jam
#       ^^^      - variable.other.readwrite.b2jam
#       ^^^      - meta.string
#       ^^^      - string.quoted
#       ^        punctuation.section.item-access.begin.b2jam
#        ^       constant.numeric.value.b2jam
#         ^      punctuation.section.item-access.end.b2jam
#          ^     punctuation.section.interpolation.end.b2jam
#            ^   punctuation.terminator.b2jam

# simple array index - corner cases
   $(var[]) ;
#  ^^^^^^^^          meta.function-call.identifier.b2jam meta.interpolation.parameter
#       ^            punctuation.section.item-access.begin.b2jam
#        ^           punctuation.section.item-access.end.b2jam
#           ^        punctuation.terminator.b2jam

# quoted strings allowed, but can only be numeric
   $(var["22"])  ;
#       ^^^^^^       meta.function-call.identifier.b2jam meta.interpolation.parameter
#       ^^^^^^       meta.item-access.b2jam
#             ^      punctuation.section.interpolation.end.b2jam
#        ^           punctuation.definition.string.begin.b2jam
#           ^        punctuation.definition.string.end.b2jam
#         ^^         meta.number.integer.decimal.b2jam constant.numeric.value.b2jam

   $(var[1]  ) ; 
#          ^^        meta.function-call.identifier.b2jam meta.interpolation.parameter.b2jam invalid.illegal.b2jam
#              ^     punctuation.terminator.b2jam


   $(var["  1"]) ;
#         ^^         meta.item-access.b2jam invalid.illegal.b2jam
#           ^        meta.item-access.b2jam meta.number.integer.decimal.b2jam constant.numeric.value.b2jam

   $(var["""""""1"]) ;
#        ^^^^^^^     punctuation.definition.string
#                ^   punctuation.definition.string
#               ^    meta.item-access.b2jam meta.number.integer.decimal.b2jam constant.numeric.value.b2jam

   $(var["1"  ]) ;
#           ^^       meta.function-call.identifier.b2jam meta.interpolation.parameter.b2jam meta.item-access.b2jam invalid.illegal.b2jam
#                ^   punctuation.terminator.b2jam


   
   $(var[word]) ;
#  ^^^^^^^^^^^^      meta.function-call.identifier.b2jam meta.interpolation.parameter
#       ^            punctuation.section.item-access.begin.b2jam
#        ^^^^        invalid.illegal.b2jam
#            ^       punctuation.section.item-access.end.b2jam
#               ^    punctuation.terminator.b2jam

   $(var["or"]) ;
#  ^^^^^^^^^^^^      meta.function-call.identifier.b2jam meta.interpolation.parameter
#       ^            punctuation.section.item-access.begin.b2jam
#         ^^         invalid.illegal.b2jam
#            ^       punctuation.section.item-access.end.b2jam
#               ^    punctuation.terminator.b2jam

   $(var[1st])  ;
#  ^^^^^^^^^^^       meta.function-call.identifier.b2jam meta.interpolation.parameter
#       ^            punctuation.section.item-access.begin.b2jam
#        ^           meta.number.integer.decimal.b2jam constant.numeric.value.b2jam
#         ^^         invalid.illegal.b2jam
#           ^        punctuation.section.item-access.end.b2jam
#               ^    punctuation.terminator.b2jam

   $(var[1$(n)])  ;
#  ^^^^^^^^^^^^^     meta.function-call.identifier.b2jam meta.interpolation.parameter
#        ^^^^^       meta.item-access.b2jam
#         ^^^^       meta.interpolation.parameter meta.interpolation.parameter
#         ^          punctuation.definition.variable.b2jam
#          ^         punctuation.section.interpolation.begin.b2jam
#           ^        variable.other.readwrite.b2jam
#            ^       punctuation.section.interpolation.end.b2jam
#       ^            punctuation.section.item-access.begin.b2jam
#        ^           meta.number.integer.decimal.b2jam constant.numeric.value.b2jam
#             ^      punctuation.section.item-access.end.b2jam
#                 ^  punctuation.terminator.b2jam

   $(var[foo$(n)])  ;
#       ^^^^^^^^^    meta.function-call.identifier.b2jam meta.interpolation.parameter
#       ^^^^^^^^^    meta.item-access.b2jam
#               ^    punctuation.section.item-access.end.b2jam
#        ^^^         invalid.illegal.b2jam
#           ^^^^     meta.interpolation.parameter meta.interpolation.parameter
#             ^      variable.other.readwrite.b2jam

   $(var[1:P3])  ;
#  ^^^^^^^^^^^       meta.function-call.identifier.b2jam meta.interpolation.parameter
#       ^^           meta.item-access.b2jam
#         ^^^        - meta.item-access.b2jam
#       ^            punctuation.section.item-access.begin.b2jam
#           ^        - punctuation.section.item-access.end.b2jam
#       ^^           invalid.illegal.b2jam
#         ^^^        - meta.item-access.b2jam


   $(var[-]) ;
#  ^^^^^^^^^     meta.function-call.identifier.b2jam meta.interpolation.parameter
#       ^        punctuation.section.item-access.begin.b2jam
#        ^       keyword.operator.arithmetic.b2jam
#         ^      punctuation.section.item-access.end.b2jam
#            ^   punctuation.terminator.b2jam



# complex array indexing
   $(var[-234]) ;
#  ^^^^^^^^^^^^      meta.function-call.identifier.b2jam meta.interpolation.parameter      
#       ^^^^^^       meta.item-access.b2jam
#       ^            punctuation.section.item-access.begin.b2jam
#        ^           keyword.operator.arithmetic.b2jam
#         ^^^        meta.number.integer.decimal.b2jam constant.numeric.value.b2jam
#            ^       punctuation.section.item-access.end.b2jam
#             ^      punctuation.section.interpolation.end.b2jam

   $(var[567-]) ;
#  ^^^^^^^^^^^^      meta.function-call.identifier.b2jam meta.interpolation.parameter      
#       ^^^^^^       meta.item-access.b2jam
#       ^            punctuation.section.item-access.begin.b2jam
#        ^^^         meta.number.integer.decimal.b2jam constant.numeric.value.b2jam
#           ^        keyword.operator.arithmetic.b2jam
#            ^       punctuation.section.item-access.end.b2jam
#             ^      punctuation.section.interpolation.end.b2jam

   $(var[89-0]) ;
#  ^^^^^^^^^^^^      meta.function-call.identifier.b2jam meta.interpolation.parameter      
#       ^^^^^^       meta.item-access.b2jam
#       ^            punctuation.section.item-access.begin.b2jam
#        ^^          meta.number.integer.decimal.b2jam constant.numeric.value.b2jam
#          ^         keyword.operator.arithmetic.b2jam
#           ^        meta.number.integer.decimal.b2jam constant.numeric.value.b2jam
#            ^       punctuation.section.item-access.end.b2jam
#             ^      punctuation.section.interpolation.end.b2jam

# legal 
   $(var[1--1]) ;
#        ^           meta.function-call.identifier.b2jam meta.interpolation.parameter meta.item-access.b2jam meta.number.integer.decimal.b2jam constant.numeric.value.b2jam
#         ^^         meta.function-call.identifier.b2jam meta.interpolation.parameter meta.item-access.b2jam keyword.operator.arithmetic.b2jam
#           ^        meta.function-call.identifier.b2jam meta.interpolation.parameter meta.item-access.b2jam meta.number.integer.decimal.b2jam constant.numeric.value.b2jam

   $(var[---1]) ;
#        ^^^         meta.function-call.identifier.b2jam meta.interpolation.parameter meta.item-access.b2jam keyword.operator.arithmetic.b2jam
#           ^        meta.function-call.identifier.b2jam meta.interpolation.parameter meta.item-access.b2jam meta.number.integer.decimal.b2jam constant.numeric.value.b2jam

# illegal
     $(var[1-2-]) ;
#            ^       meta.function-call.identifier.b2jam meta.interpolation.parameter meta.item-access.b2jam meta.number.integer.decimal.b2jam constant.numeric.value.b2jam        
#             ^      invalid.illegal.b2jam            

     $(var[1-2-4])   ;
#    ^^^^^^^^^^^^^   meta.function-call.identifier.b2jam meta.interpolation.parameter      
#         ^^^^^^^    meta.item-access.b2jam
#          ^         meta.number.integer.decimal.b2jam constant.numeric.value.b2jam
#           ^        keyword.operator.arithmetic.b2jam
#             ^      - keyword.operator.arithmetic.b2jam
#              ^     - meta.number - constant.numeric
#             ^^     invalid.illegal.b2jam
#            ^       meta.number.integer.decimal.b2jam constant.numeric.value.b2jam
#               ^    punctuation.section.item-access.end.b2jam
#                ^   punctuation.section.interpolation.end.b2jam


      $(var["1-2"])  ;
#          ^^^^^^^   meta.function-call.identifier.b2jam meta.interpolation.parameter meta.item-access.b2jam
#          ^^^^^^^   - invalid
#           ^^^^^    meta.string.b2jam
#           ^        punctuation.definition.string.begin.b2jam
#               ^    punctuation.definition.string.end.b2jam
#            ^       meta.number.integer.decimal.b2jam constant.numeric.value.b2jam        
#              ^     meta.number.integer.decimal.b2jam constant.numeric.value.b2jam        
#             ^      keyword.operator.arithmetic.b2jam

      $(var["1-2-"])  ;
#          ^^^^^^^   meta.function-call.identifier.b2jam meta.interpolation.parameter meta.item-access.b2jam
#          ^^^^^     - invalid
#                ^   - invalid
#               ^    invalid.illegal.b2jam
#           ^^^^^    meta.string.b2jam
#           ^        punctuation.definition.string.begin.b2jam
#                ^   punctuation.definition.string.end.b2jam
#            ^       meta.number.integer.decimal.b2jam constant.numeric.value.b2jam        
#              ^     meta.number.integer.decimal.b2jam constant.numeric.value.b2jam        
#             ^      keyword.operator.arithmetic.b2jam

      $(var[1"-"2-])  ;
#          ^^^^^^^^   meta.function-call.identifier.b2jam meta.interpolation.parameter meta.item-access.b2jam
#          ^^^^^^     - invalid
#                ^   invalid.illegal.b2jam
#            ^^^     meta.string.b2jam
#            ^       punctuation.definition.string.begin.b2jam
#              ^     punctuation.definition.string.end.b2jam
#           ^        meta.number.integer.decimal.b2jam constant.numeric.value.b2jam        
#               ^    meta.number.integer.decimal.b2jam constant.numeric.value.b2jam        
#             ^      keyword.operator.arithmetic.b2jam

      $(var[1"-2])"  ;
#          ^^^^^^    meta.function-call.identifier.b2jam meta.interpolation.parameter meta.item-access.b2jam
#            ^^^^^^  meta.string.b2jam 
#            ^       punctuation.definition.string.begin.b2jam
#           ^        meta.number.integer.decimal.b2jam constant.numeric.value.b2jam        
#              ^     meta.number.integer.decimal.b2jam constant.numeric.value.b2jam
#             ^      keyword.operator.arithmetic.b2jam

      $(var["1-""]) " ;
#          ^^^^^^^      meta.function-call.identifier.b2jam meta.interpolation.parameter meta.item-access.b2jam
#           ^^^^^^^^^   meta.string.b2jam
#           ^           punctuation.definition.string.begin.b2jam
#              ^        punctuation.definition.string.end.b2jam
#               ^       punctuation.definition.string.begin.b2jam
#                   ^   punctuation.definition.string.end.b2jam
#            ^          meta.number.integer.decimal.b2jam constant.numeric.value.b2jam        
#             ^         keyword.operator.arithmetic.b2jam

    " $(var[1-"-"-3"])  ;
#          ^^^^^^^^^^   meta.function-call.identifier.b2jam meta.interpolation.parameter meta.item-access.b2jam
#          ^^^^^^^^^^^  - invalid
#   ^^^^^^^^^^^         meta.string.b2jam
#              ^        - meta.string.b2jam
#               ^^^^    meta.string.b2jam
#   ^                   punctuation.definition.string.begin.b2jam
#             ^         punctuation.definition.string.end.b2jam
#               ^       punctuation.definition.string.begin.b2jam
#                  ^    punctuation.definition.string.end.b2jam
#           ^           meta.number.integer.decimal.b2jam constant.numeric.value.b2jam        
#                 ^     meta.number.integer.decimal.b2jam constant.numeric.value.b2jam        
#            ^          keyword.operator.arithmetic.b2jam
#              ^        keyword.operator.arithmetic.b2jam
#                ^      keyword.operator.arithmetic.b2jam

      $(var["1""3"])  ;
#          ^^^^^^^^     meta.function-call.identifier.b2jam meta.interpolation.parameter meta.item-access.b2jam
#          ^^^^^^^^     - invalid
#           ^^^^^^      meta.string.b2jam
#           ^           punctuation.definition.string.begin.b2jam
#              ^        punctuation.definition.string.begin.b2jam
#             ^         punctuation.definition.string.end.b2jam
#                ^      punctuation.definition.string.end.b2jam
#            ^          meta.number.integer.decimal.b2jam constant.numeric.value.b2jam        
#               ^       meta.number.integer.decimal.b2jam constant.numeric.value.b2jam        

      $(var["1"2-3])  ;
#          ^^^^^^^^     meta.function-call.identifier.b2jam meta.interpolation.parameter meta.item-access.b2jam
#          ^^^^^^^^     - invalid
#           ^^^         meta.string.b2jam
#            ^          meta.number.integer.decimal.b2jam constant.numeric.value.b2jam        
#              ^        meta.number.integer.decimal.b2jam constant.numeric.value.b2jam        
#                ^      meta.number.integer.decimal.b2jam constant.numeric.value.b2jam        
#               ^       keyword.operator.arithmetic.b2jam


###[ MODIFIERS ]#############

   $(var[1]:G=grist)  ;
#  ^^^^^^^^^^^^^^^^^ meta.function-call.identifier.b2jam meta.interpolation.parameter    
#   ^                meta.interpolation.parameter.b2jam punctuation.section.interpolation.begin.b2jam
#    ^^^             meta.interpolation.parameter.identifier.b2jam
#       ^^^          meta.interpolation.parameter.b2jam meta.item-access.b2jam
#          ^^^^^^^^  meta.interpolation.parameter.modifier.b2jam
#                  ^ meta.interpolation.parameter.b2jam punctuation.section.interpolation.end.b2jam
#       ^^^          meta.item-access.b2jam
#          ^         keyword.operator.expansion.b2jam
#           ^        variable.parameter.switch.b2jam
#            ^       keyword.operator.assignment.b2jam
#           ^^       - string 
#             ^^^^^  meta.string.b2jam string.unquoted.b2jam

  "$(var[1]:G=grist)"  ;
# ^^^^^^^^^^^^^^^^^^^   meta.function-call.identifier.b2jam meta.string.b2jam
#  ^^^^^^^^^^^^^^^^^    meta.interpolation.parameter    
#   ^                   meta.interpolation.parameter.b2jam punctuation.section.interpolation.begin.b2jam
#    ^^^                meta.interpolation.parameter.identifier.b2jam
#       ^^^             meta.interpolation.parameter.b2jam meta.item-access.b2jam
#          ^^^^^^^^     meta.interpolation.parameter.modifier.b2jam
#                  ^    meta.interpolation.parameter.b2jam punctuation.section.interpolation.end.b2jam
#       ^^^             meta.item-access.b2jam
#          ^            keyword.operator.expansion.b2jam
#           ^           variable.parameter.switch.b2jam
#            ^          keyword.operator.assignment.b2jam
#           ^^          - string 
#             ^^^^^     meta.string.b2jam string.quoted.double.b2jam


     $(var:G=)    ;
#            ^          punctuation.section.interpolation.end.b2jam
#           ^           keyword.operator.assignment.b2jam

     $(var:G=[)   ;
#             ^         meta.function-call.identifier.b2jam meta.interpolation.parameter punctuation.section.interpolation.end.b2jam
#            ^          meta.string.b2jam string.unquoted.b2jam

     $(var:G=())  ;
#              ^        meta.function-call.identifier.b2jam meta.interpolation.parameter punctuation.section.interpolation.end.b2jam        
#            ^^         meta.string.b2jam string.unquoted.b2jam

     $(foo:G=))   ; 
#            ^          meta.function-call.identifier.b2jam meta.interpolation.parameter punctuation.section.interpolation.end.b2jam        
#             ^         meta.function-call.identifier.b2jam variable.function.b2jam

                # deprecated warning for unescaped space
     $(var:G= )  ;
#             ^         meta.function-call.identifier.b2jam meta.interpolation.parameter punctuation.section.interpolation.end.b2jam        
#            ^          meta.function-call.identifier.b2jam meta.interpolation.parameter invalid.deprecated.b2jam

                # escaped
     $(var:G=\ )  ;
#              ^        meta.function-call.identifier.b2jam meta.interpolation.parameter punctuation.section.interpolation.end.b2jam        
#            ^^         meta.function-call.identifier.b2jam meta.interpolation.parameter constant.character.escape.b2jam

                # quoted
     $(var:G=" ") ;
#               ^       meta.function-call.identifier.b2jam meta.interpolation.parameter punctuation.section.interpolation.end.b2jam        
#            ^^^        meta.function-call.identifier.b2jam meta.interpolation.parameter meta.string.b2jam string.quoted.double.b2jam
#            ^          punctuation.definition.string.begin.b2jam        
#              ^        punctuation.definition.string.end.b2jam        

     #illegal
     $(var:G=(asdf:) ;
#            ^^^^^       meta.function-call.identifier.b2jam meta.interpolation.parameter meta.string.b2jam string.unquoted.b2jam
#            ^           invalid.illegal.b2jam
#                 ^      meta.function-call.identifier.b2jam meta.interpolation.parameter keyword.operator.expansion.b2jam
#                  ^     meta.function-call.identifier.b2jam meta.interpolation.parameter punctuation.section.interpolation.end.b2jam
#                    ^   punctuation.terminator.b2jam

     # deprecated, balanced (), limited to 2 chars
     $(var:G=()    ; ) ;
#            ^^          meta.string.b2jam string.unquoted.b2jam        
#              ^^^^      meta.string.b2jam invalid.deprecated.b2jam
#                  ^     meta.string.b2jam string.unquoted.b2jam
#                   ^    meta.string.b2jam invalid.deprecated.b2jam
#                    ^   punctuation.section.interpolation.end.b2jam
#                      ^ punctuation.terminator.b2jam
    # fix with quote
     $(var:G=()"  ; ") ;
#     ^^^^^^^^^^^^^^^^   - invalid
#                      ^ punctuation.terminator.b2jam

    $(foo:G=\()     ; 
   ) ;
#  ^                     meta.function-call.identifier.b2jam meta.interpolation.parameter punctuation.section.interpolation.end.b2jam
#    ^                   punctuation.terminator.b2jam        
   

   $(foo:G="("))   ;  
#  ^^^^^^^^^^^^^^^^^    - invalid
#              ^        punctuation.section.interpolation.end.b2jam

   $(foo:G="\("))  ; 
#  ^^^^^^^^^            - invalid
#           ^           constant.character.escape.impotent.b2jam invalid.deprecated.impotent.escape.b2jam
#            ^^^^^^^    - invalid
#               ^       punctuation.section.interpolation.end.b2jam


   $(foo:G=\))     ; 
#  ^^^^^^^^             - invalid
#          ^            constant.character.escape.impotent.b2jam invalid.deprecated.impotent.escape.b2jam
#           ^^^^^^^^    - invalid
#           ^           punctuation.section.interpolation.end.b2jam
#            ^          variable.function.b2jam

  "$(foo:G=")")  " ; 
# ^^^^^^^^^^^^^^^^^^    - invalid
#           ^           punctuation.section.interpolation.end.b2jam
#            ^^^^^      variable.function.b2jam
# ^^^^^^^^^^            meta.string
#           ^           - meta.string
#            ^^^^^      meta.string.b2jam

   $(foo:G="\))  " ; 
#  ^^^^^^^^^^^^^^^^^    - invalid.illegal
#           ^           constant.character.escape.impotent.b2jam invalid.deprecated.impotent.escape.b2jam
#            ^          punctuation.section.interpolation.end.b2jam
#             ^         variable.function.b2jam

   $(var:G=])      ;
#  ^^^^^^^^^^^^^^^^^    - invalid
#          ^            meta.string.b2jam string.unquoted.b2jam

   $(var:G=\])     ;
#  ^^^^^^^^^^^^^^^^^    - invalid
#          ^^           meta.string.b2jam string.unquoted.b2jam
#          ^            constant.character.escape.impotent.b2jam
#           ^           string.unquoted.b2jam
#           ^           - constant.character.escape

   $(var:G="]")    ;
#  ^^^^^^^^^^^^^^^^^    - invalid
#          ^^^          meta.string.b2jam string.quoted.double.b2jam

   $(var:G="\]")   ;
#  ^^^^^^^^^^^^^^^^^    - invalid
#          ^^^^         meta.string.b2jam string.quoted.double.b2jam
#           ^           constant.character.escape.impotent.b2jam
#            ^          - constant.character.escape

   $(var:G=\:)     ;
#  ^^^^^^^^             - invalid
#          ^            constant.character.escape.impotent.b2jam invalid.deprecated.impotent.escape.b2jam
#           ^^^^^^^^    - invalid

   $(var:G=":")    ;
#  ^^^^^^^^^^^^^^^^^    - invalid
#           ^           keyword.operator.expansion.b2jam


   $(var:G="$(f))"  ;
#  ^^^^^^^^^^^^^^^^^^   - invalid

  " $(var:G=$(f)")  ;
# ^^^^^^^^^^^^^^^^^^^   - invalid

# works alone - simple
   $(var:P) ;
#  ^^^^^^^^^^           - invalid
#        ^              variable.parameter.switch.b2jam

# works alone - simple, multiple
   $(var:PTL) ;
#  ^^^^^^^^^^           - invalid
#        ^^^            variable.parameter.switch.b2jam

# opt-assign - multiple  
   $(var:BMJ) ;
#  ^^^^^^^^^^           - invalid
#        ^^^            variable.parameter.switch.b2jam

# opt-assign, alone - multiple  
   $(var:BMPJ) ;
#  ^^^^^^^^^^           - invalid
#        ^^^^           variable.parameter.switch.b2jam

# opt-assign, incorrect multiple assign
   $(var:G=fishJ=,) ;
#  ^^^^^^^^^^^^^^^^^^   - invalid
#          ^^^^^^^      string.unquoted.b2jam
#        ^              variable.parameter.switch.b2jam
#         ^             keyword.operator.assignment.b2jam
#              ^        - variable.parameter.switch.b2jam
#               ^       - keyword.operator.assignment.b2jam

# opt-assign, correct multiple assign
   $(var:G=fish:J=,) ;
#  ^^^^^^^^^^^^^^^^^^   - invalid
#          ^^^^         string.unquoted.b2jam
#              ^^^      - string.unquoted.b2jam
#                 ^     string.unquoted.b2jam
#        ^              variable.parameter.switch.b2jam
#               ^       variable.parameter.switch.b2jam
#              ^        keyword.operator.expansion.b2jam
#         ^             keyword.operator.assignment.b2jam
#                ^      keyword.operator.assignment.b2jam
#               ^       variable.parameter.switch.b2jam
#                ^      keyword.operator.assignment.b2jam


# must-assign, no assignment, invalid but still an operator?
   $(var:R) ;
#  ^^^^^^               - invalid
#        ^              invalid.deprecated.b2jam
#         ^^^           - invalid
#        ^              variable.parameter.switch.b2jam


# must-assign, empty assignment
   $(var:R=) ;
#  ^^^^^^^^^^^          - invalid
#        ^              variable.parameter.switch.b2jam
#         ^             keyword.operator.assignment.b2jam

# must-assign, no assignment mixed with others
   $(var:GJRP) ;
#  ^^^^^^^^             - invalid
#          ^            invalid.deprecated.b2jam
#           ^^^^        - invalid
#        ^^^^           variable.parameter.switch.b2jam

   $(var:G"JRP"G) ;
#  ^^^^^^^^^            - invalid
#           ^           invalid.deprecated.b2jam
#            ^^^^^^^    - invalid
#        ^              variable.parameter.switch.b2jam
#         ^^^^^         meta.string.b2jam - string.quoted.double.b2jam
#              ^        - meta.string.b2jam 

   $(var:G(JRP)G) ;
#  ^^^^^^^^^            - invalid
#           ^           invalid.deprecated.b2jam
#            ^^^^^^     - invalid
#        ^              variable.parameter.switch.b2jam
#         ^             - variable.parameter.switch.b2jam
#           ^^          variable.parameter.switch.b2jam
#             ^         - variable.parameter.switch.b2jam

# unknown modifiers are simply skipped
    $(var:XYGP) ;
#         ^^            string.unquoted.b2jam
#           ^^          variable.parameter.switch.b2jam

# even = if not prefixed by something known to use it
    $(var:=G) ;
#         ^             string.unquoted.b2jam
#          ^            variable.parameter.switch.b2jam

# or an = after a modifier that doesn't use params
    $(var:L=G) ;
#         ^             variable.parameter.switch.b2jam
#          ^            invalid.deprecated.b2jam
#           ^           variable.parameter.switch.b2jam

# escaping in modifier
    $(var: \n\()) ;
#         ^             invalid.deprecated.b2jam
#          ^^           constant.character.escape.b2jam
#            ^          constant.character.escape.impotent.b2jam invalid.deprecated.impotent.escape.b2jam

# nested expansion
   cmd$(var$(foo)) ;        # identifier
#  ^^^^^^^^^^^^^^^          source.b2jam
#  ^^^^^^^^^^^^^^^          meta.function-call.identifier.b2jam - invalid
#  ^^^                      variable.function.b2jam
#     ^^^^^^^^^^^^          - variable.function.b2jam
#     ^^^^^^^^^^^^          meta.interpolation.parameter
#          ^^^^^^           meta.interpolation.parameter meta.interpolation.parameter
#            ^^^            variable.other.readwrite.b2jam
#            ^^^            - ( variable.other.readwrite.b2jam variable.other.readwrite.b2jam )

   "cmd$(var$(foo))" ;      # quoted identifier
#  ^^^^^^^^^^^^^^^^^^^      source.b2jam
#  ^^^^^^^^^^^^^^^^^        meta.function-call.identifier.b2jam - invalid
#  ^^^^^^^^^^^^^^^^^        meta.string.b2jam    
#  ^^^^                     variable.function.b2jam
#      ^^^^^^^^^^^^          - variable.function.b2jam
#                  ^        variable.function.b2jam
#      ^^^^^^^^^^^^         meta.interpolation.parameter
#           ^^^^^^          meta.interpolation.parameter meta.interpolation.parameter
#             ^^^           variable.other.readwrite.b2jam
#             ^^^           - ( variable.other.readwrite.b2jam variable.other.readwrite.b2jam )

   cmd$(var$((f:)) ;        # identifier with failure
#  ^^^^^^^^^^^^^^^          source.b2jam
#  ^^^^^^^^^^^^^^^          meta.function-call.identifier.b2jam
#  ^^^^^^^^^^               - invalid.illegal.b2jam
#            ^              invalid.illegal.b2jam
#             ^^^^          - invalid.illegal.b2jam
#  ^^^                      variable.function.b2jam
#     ^^^^^^^^^^^^          - variable.function.b2jam
#     ^^^^^^^^^^^^          meta.interpolation.parameter
#          ^^^^^^           meta.interpolation.parameter meta.interpolation.parameter
#            ^^             variable.other.readwrite.b2jam
#            ^^             - ( variable.other.readwrite.b2jam variable.other.readwrite.b2jam )

   "cmd$(var$((f:))" ;      # quoted identifier with failure
#  ^^^^^^^^^^^^^^^^^^^      source.b2jam
#  ^^^^^^^^^^^^^^^^^        meta.function-call.identifier.b2jam
#  ^^^^^^^^^^^              - invalid.illegal.b2jam
#             ^             invalid.illegal.b2jam
#              ^^^^^        - invalid.illegal.b2jam
#  ^^^^^^^^^^^^^^^^^        meta.string.b2jam    
#  ^^^^                     variable.function.b2jam
#      ^^^^^^^^^^^^          - variable.function.b2jam
#                  ^        variable.function.b2jam
#      ^^^^^^^^^^^^         meta.interpolation.parameter
#           ^^^^^^          meta.interpolation.parameter meta.interpolation.parameter
#             ^^            variable.other.readwrite.b2jam
#             ^^            - ( variable.other.readwrite.b2jam variable.other.readwrite.b2jam )

   cmd$(var[$(foo)]) ;      # 'expr' expansion in brackets
#  ^^^^^^^^^^^^^^^^^^^      source.b2jam
#  ^^^^^^^^^^^^^^^^^        meta.function-call.identifier.b2jam - invalid
#     ^^^^^^^^^^^^^^       - variable.function.b2jam
#     ^^^^^^^^^^^^^^        meta.interpolation.parameter
#          ^^^^^^^^         meta.interpolation.parameter meta.item-access.b2jam
#           ^^^^^^          meta.interpolation.parameter meta.item-access.b2jam meta.interpolation.parameter
#             ^^^           variable.other.readwrite.b2jam
#             ^^^           - ( variable.other.readwrite.b2jam variable.other.readwrite.b2jam )

  "cmd$(var[$(foo)])" ;     # 'expr' expansion in quoted brackets
# ^^^^^^^^^^^^^^^^^^^^^     source.b2jam
# ^^^^^^^^^^^^^^^^^^^       meta.string.b2jam    
# ^^^^^^^^^^^^^^^^^^^       meta.function-call.identifier.b2jam - invalid
#     ^^^^^^^^^^^^^^       - variable.function.b2jam
#     ^^^^^^^^^^^^^^        meta.interpolation.parameter
#          ^^^^^^^^         meta.interpolation.parameter meta.item-access.b2jam
#           ^^^^^^          meta.interpolation.parameter meta.item-access.b2jam meta.interpolation.parameter
#             ^^^           variable.other.readwrite.b2jam
#             ^^^           - ( variable.other.readwrite.b2jam variable.other.readwrite.b2jam )

   cmd$(var[-1$(foo)]) ;    # 'num' expansion in brackets
#  ^^^^^^^^^^^^^^^^^^^^^    source.b2jam
#  ^^^^^^^^^^^^^^^^^^^      meta.function-call.identifier.b2jam - invalid
#     ^^^^^^^^^^^^^^^^      - variable.function.b2jam
#     ^^^^^^^^^^^^^^^^      meta.interpolation.parameter
#          ^^^^^^^^^^       meta.interpolation.parameter meta.item-access.b2jam
#             ^^^^^^        meta.interpolation.parameter meta.item-access.b2jam meta.interpolation.parameter
#               ^^^         variable.other.readwrite.b2jam
#               ^^^         - ( variable.other.readwrite.b2jam variable.other.readwrite.b2jam )

  "cmd$(var[-1$(foo)])" ;   # 'num' expansion in quoted brackets
# ^^^^^^^^^^^^^^^^^^^^^^^   source.b2jam
# ^^^^^^^^^^^^^^^^^^^^^     meta.string.b2jam    
# ^^^^^^^^^^^^^^^^^^^^^     meta.function-call.identifier.b2jam - invalid
#     ^^^^^^^^^^^^^^^^      - variable.function.b2jam
#     ^^^^^^^^^^^^^^^^      meta.interpolation.parameter
#          ^^^^^^^^^^       meta.interpolation.parameter meta.item-access.b2jam
#             ^^^^^^        meta.interpolation.parameter meta.item-access.b2jam meta.interpolation.parameter
#               ^^^         variable.other.readwrite.b2jam
#               ^^^         - ( variable.other.readwrite.b2jam variable.other.readwrite.b2jam )

   cmd$(var[1-1-$(foo)]) ;  # 'remainder' expansion in brackets
#  ^^^^^^^^^^^^^^^^^^^^^^^  source.b2jam
#  ^^^^^^^^^^^^^^^^^^^^^    meta.function-call.identifier.b2jam
#              ^            invalid.illegal.b2jam
#     ^^^^^^^^^^^^^^^^^^    - variable.function.b2jam
#     ^^^^^^^^^^^^^^^^^^    meta.interpolation.parameter
#          ^^^^^^^^^^^^     meta.interpolation.parameter meta.item-access.b2jam
#               ^^^^^^      meta.interpolation.parameter meta.item-access.b2jam meta.interpolation.parameter
#                 ^^^       variable.other.readwrite.b2jam
#                 ^^^       - ( variable.other.readwrite.b2jam variable.other.readwrite.b2jam )

  "cmd$(var[1-1-$(foo)])" ; # 'num' expansion in quoted brackets
# ^^^^^^^^^^^^^^^^^^^^^^^^^ source.b2jam
# ^^^^^^^^^^^^^^^^^^^^^^^   meta.string.b2jam    
# ^^^^^^^^^^^^^^^^^^^^^^^   meta.function-call.identifier.b2jam
#              ^            invalid.illegal.b2jam
#     ^^^^^^^^^^^^^^^^^^    - variable.function.b2jam
#     ^^^^^^^^^^^^^^^^^^    meta.interpolation.parameter
#          ^^^^^^^^^^^^     meta.interpolation.parameter meta.item-access.b2jam
#               ^^^^^^      meta.interpolation.parameter meta.item-access.b2jam meta.interpolation.parameter
#                 ^^^       variable.other.readwrite.b2jam
#                 ^^^       - ( variable.other.readwrite.b2jam variable.other.readwrite.b2jam )

# assume expansion is valid assignable 

   cmd$(var:$(bar)=foo) ;   # modifier expansion
#  ^^^^^^^^^^^^^^^^^^^^^^   source.b2jam
#  ^^^^^^^^^^^^^^^^^^^^     meta.function-call.identifier.b2jam - invalid
#     ^^^^^^^^^^^^^^^^^     - variable.function.b2jam
#     ^^^^^^^^^^^^^^^^^     meta.interpolation.parameter
#           ^^^^^^          - variable.parameter.switch.b2jam
#                 ^         keyword.operator.assignment.b2jam
#  ^^^^^^^^^^^^^^^^         - meta.string
#                  ^^^      meta.string.b2jam
#                     ^^^   - meta.string
#                  ^^^      string.unquoted.b2jam
#           ^^^^^^          - string.unquoted.b2jam
#                ^^^^^      - variable.other.readwrite.b2jam
#           ^^^^^^          meta.interpolation.parameter meta.interpolation.parameter
#             ^^^           variable.other.readwrite.b2jam
#             ^^^           - ( variable.other.readwrite.b2jam variable.other.readwrite.b2jam )

# assume expansion is valid assignable 
                
  "cmd$(var:$(bar)=foo)" ;  # modifier expansion - quoted
# ^^^^^^^^^^^^^^^^^^^^^^^^  source.b2jam
# ^^^^^^^^^^^^^^^^^^^^^^    meta.function-call.identifier.b2jam - invalid
# ^^^^^^^^^^^^^^^^^^^^^^    - meta.string.b2jam meta.string.b2jam
#     ^^^^^^^^^^^^^^^^^     - variable.function.b2jam
#     ^^^^^^^^^^^^^^^^^     meta.interpolation.parameter
#           ^^^^^^          - variable.parameter.switch.b2jam
#                 ^         keyword.operator.assignment.b2jam
#                  ^^^      string.quoted.double.b2jam
# ^^^^^^^^^^^^^^^^^          - string.quoted.double.b2jam
#                ^^^^^      - variable.other.readwrite.b2jam
#           ^^^^^^          meta.interpolation.parameter meta.interpolation.parameter
#             ^^^           variable.other.readwrite.b2jam
#             ^^^           - ( variable.other.readwrite.b2jam variable.other.readwrite.b2jam )

   cmd$(var:G=foo$(bar)) ;  # modifier-value expansion
#  ^^^^^^^^^^^^^^^^^^^^^^^  source.b2jam
#  ^^^^^^^^^^^^^^^^^^^^^    meta.function-call.identifier.b2jam - invalid
#     ^^^^^^^^^^^^^^^^^^    - variable.function.b2jam
#     ^^^^^^^^^^^^^^^^^^    meta.interpolation.parameter
#            ^              keyword.operator.assignment.b2jam
#  ^^^^^^^^^^^              - meta.string
#             ^^^            meta.string.b2jam
#                ^^^^^^^    - meta.string
#             ^^^           string.unquoted.b2jam
#                ^^^^^^     - string.unquoted.b2jam
#           ^^^^^^^         - variable.other.readwrite.b2jam
#                ^^^^^^     meta.interpolation.parameter meta.interpolation.parameter
#                  ^^^      variable.other.readwrite.b2jam
#                  ^^^      - ( variable.other.readwrite.b2jam variable.other.readwrite.b2jam )

  "cmd$(var:G=foo$(bar))" ; # modifier-value expansion in quotes
# ^^^^^^^^^^^^^^^^^^^^^^^^^ source.b2jam
# ^^^^^^^^^^^^^^^^^^^^^^^^^ - meta.string.b2jam meta.string.b2jam
# ^^^^^^^^^^^^^^^^^^^^^^^   meta.string.b2jam    
# ^^^^^^^^^^^^^^^^^^^^^^^   meta.function-call.identifier.b2jam - invalid
#     ^^^^^^^^^^^^^^^^^^    - variable.function.b2jam
#     ^^^^^^^^^^^^^^^^^^    meta.interpolation.parameter
#            ^              keyword.operator.assignment.b2jam
# ^^^^^^^^^^^^              - string.quoted.double.b2jam
#             ^^^           string.quoted.double.b2jam
#                ^^^^^^^^   - string.quoted.double.b2jam
#           ^^^^^^^         - variable.other.readwrite.b2jam
#                ^^^^^^     meta.interpolation.parameter meta.interpolation.parameter
#                  ^^^      variable.other.readwrite.b2jam
#                  ^^^      - ( variable.other.readwrite.b2jam variable.other.readwrite.b2jam )


# quote in identifier should still be an interpolation parameter
   $(var"quote") ;
#  ^^^^^^^^^^^^^                    meta.function-call.identifier.b2jam meta.interpolation.parameter
#    ^^^^^^^^^^                     variable.other.readwrite.b2jam
#       ^^^^^^^                     meta.string.b2jam

# with problems
   sdf$(var$(foo" ):G=$(foo[@]))" ;
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^    meta.function-call.identifier.b2jam
#  ^^^                              variable.function.b2jam
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^    - variable.function.b2jam
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^    meta.interpolation.parameter
#          ^^^^^^^^                 meta.interpolation.parameter meta.interpolation.parameter
#       ^^^                         variable.other.readwrite.b2jam
#            ^^^^^                  - ( variable.other.readwrite.b2jam variable.other.readwrite.b2jam )
#               ^^^^^^^^^^^^^^^^^   meta.string
#               ^                   punctuation.definition.string.begin.b2jam
#  ^^^^^^^^^^^^^^^^^^^^^^^^^        - invalid
#                           ^       invalid.illegal.b2jam
#                            ^^^^   - invalid
#                           ^       invalid.illegal.b2jam 
#                            ^^^    - invalid
